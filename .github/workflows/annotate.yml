name: annotate

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.adoc'
  schedule:
    - cron: '0 4 * * *'  # every day at 3:00
  pull_request:
    paths-ignore:
      - '*.adoc'
  workflow_dispatch:

jobs:
  git-sync:
    name: Sync ISO wg12-stepmod to GitHub iso-10303-stepmod-wg12
    runs-on: ubuntu-latest
    steps:
      - name: git-sync
        uses: wei/git-sync@v3
        with:
          source_repo: "https://${{ secrets.ISO_BITBUCKET_USERNAME_URLENCODED }}:${{ secrets.ISO_BITBUCKET_PAT_TOKEN_URLENCODED }}@sd.iso.org/bitbucket-pilot/scm/isotc184sc4/wg12-stepdev.git"
          destination_repo: "https://${{ secrets.METANORMA_CI_USERNAME }}:${{ secrets.METANORMA_CI_PAT_TOKEN }}@github.com/metanorma/iso-10303-stepmod-wg12.git"
          source_branch: "refs/remotes/source/*"
          destination_branch: "refs/heads/*"

  annotate:
    name: Annotate stepmod-wg12 repository
    runs-on: ubuntu-latest
    needs: git-sync
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      - run: gem install stepmod-utils

      - uses: actions/checkout@v2
        with:
          path: iso-10303-stepmod-wg12
          repository: metanorma/iso-10303-stepmod-wg12
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
          ref: SMRLv10
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global init.defaultBranch main
          git config --global user.name "metanorma-ci"
          git config --global user.email "metanorma-ci@users.noreply.github.com"

      - name: "Add Git remote - GitHub iso-10303-stepmod-wg12"
        working-directory: iso-10303-stepmod-wg12
        run: |
          git remote set-url origin \
            https://${{ secrets.METANORMA_CI_USERNAME }}:${{ secrets.METANORMA_CI_PAT_TOKEN }}@github.com/metanorma/iso-10303-stepmod

      - name: Annotate repository
        working-directory: iso-10303-stepmod-wg12
        run: |
          stepmod-annotate-all .

      - name: Download stepmod2mn and convert SVGs
        working-directory: iso-10303-stepmod-wg12
        run: |
          # TODO
          wget https://github.com/metanorma/stepmod2mn/releases/download/v1.10/stepmod2mn-1.10.jar

          # convert all XML files into adoc files
          find . -name "resource.xml" -exec java -jar stepmod2mn-1.10.jar {} \;

          # generate SVG images in the tree data
          # 'data' is sub-folder in iso-10303-stepmod-wg12
          java -jar stepmod2mn-1.10.jar data -svg

          # copy over per-schema EXPRESS-G files
          # git ls-files -- 'data/resources/*/*.svg' | xargs -I '{}' cp stepmod/{} {}

          # copy all new .svg into the folder 'stepmod'
          git ls-files --others 'data/resources/*/*.svg'  | xargs -I '{}' cp --parents {} stepmod

          # copy over per-part EXPRESS-G files
          for f in $(git ls-files -- 'data/documents/*/*.svg'); do \
            OLDPATH=${f//documents\/resources/resource_docs}; \
            cp stepmod/$OLDPATH $f; \
          done

      - name: Add annotations
        working-directory: iso-10303-stepmod-wg12
        run: |
          git add -A
          git commit -m "Add Annotated EXPRESS" || echo "Nothing to commit"

      - name: Git push to GitHub iso-10303-stepmod
        if: github.ref == 'refs/heads/main'
        working-directory: iso-10303-stepmod-wg12
        run: |
          max=$(git log --oneline|wc -l); \
          for i in $(seq $max -500 1); do \
            echo $i; g=$(git log --reverse --oneline --skip $i -n1|perl -alne'print $F[0]'); \
            git push origin $g:refs/heads/gitconvert -f; \
          done

          for x in $(git branch | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push origin -f $y; \
          done

          for x in $(git tag | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push origin -f $y; \
          done

          git push origin :refs/heads/gitconvert -f
